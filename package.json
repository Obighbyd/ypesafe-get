{
  "name": "typesafe-get",
  "version": "2.0.1",
  "description": "A typesafe way to get nested properties when any parent property might be undefined, while we wait for the optional chaining operator to finally exist",
  "main": "index.js",
  "types": "index.ts",
  "files": [
    "index.js",
    "index.js.map",
    "index.ts"
  ],
  "scripts": {
    "test": "mocha -r ts-node/register test.ts",
    "prepublishOnly": "tsc"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/pimterry/typesafe-get.git"
  },
  "keywords": [
    "typescript",
    "typesafe",
    "get",
    "optional",
    "chaining",
    "optional chaining",
    "lookup",
    "property",
    "undefined",
    "null",
    "safe"
  ],
  "author": "Tim Perry <pimterry@gmail.com>",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/pimterry/typesafe-get/issues"
  },
  "homepage": "https://github.com/pimterry/typesafe-get#readme",
  "devDependencies": {
    "@types/chai": "^4.1.2",
    "@types/mocha": "^2.2.48",
    "chai": "^4.1.2",
    "mocha": "^5.0.1",
    "ts-node": "^7.0.0",
    "typescript": "^2.9.2"
  },
  "dependencies": {}
}
